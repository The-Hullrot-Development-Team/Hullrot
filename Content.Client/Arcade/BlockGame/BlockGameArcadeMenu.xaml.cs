using System.Numerics;
using Content.Client.UserInterface.Controls;
using Content.Shared.Arcade.BlockGame;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Arcade.BlockGame;

[GenerateTypedNameReferences]
public sealed partial class BlockGameArcadeMenu : FancyWindow
{
    public Action? OnNewGame;

    private static readonly Vector2 BlockSize = new(24, 24);

    private (BlockGameArcadeBlock block, PanelContainer panel)[] _previewBlocks = [];
    private (BlockGameArcadeBlock block, PanelContainer panel)[] _mainBlocks = [];

    public BlockGameArcadeMenu()
    {
        RobustXamlLoader.Load(this);

        SetupGrid(PreviewGrid, ref _previewBlocks);
        SetupGrid(MainGrid, ref _mainBlocks);
    }

    /// <summary>
    ///
    /// </summary>
    private static void SetupGrid(GridContainer grid, ref (BlockGameArcadeBlock block, PanelContainer panel)[] blocks)
    {
        var size = grid.Columns * grid.Columns;

        blocks = new (BlockGameArcadeBlock, PanelContainer)[size];

        for (var i = 0; i < size - 1; i++)
        {
            var container = new PanelContainer
            {
                MinSize = BlockSize,
                PanelOverride = new StyleBoxFlat { BackgroundColor = Color.Transparent },
                HorizontalAlignment = HAlignment.Center,
                RectDrawClipMargin = 0,
            };

            grid.AddChild(container);

            blocks[i] = (BlockGameArcadeBlock.Empty, container);
        }
    }

    /// <summary>
    ///
    /// </summary>
    private Color BlockToColor(BlockGameArcadeBlock block)
    {
        return block switch
        {
            BlockGameArcadeBlock.Red => Color.Red,
            BlockGameArcadeBlock.Orange => Color.Orange,
            BlockGameArcadeBlock.Yellow => Color.Yellow,
            BlockGameArcadeBlock.Green => Color.Lime,
            BlockGameArcadeBlock.Blue => Color.Blue,
            BlockGameArcadeBlock.LightBlue => Color.Cyan,
            BlockGameArcadeBlock.Purple => Color.DarkOrchid,
            BlockGameArcadeBlock.GhostRed => Color.Red.WithAlpha(0.33f),
            BlockGameArcadeBlock.GhostOrange => Color.Orange.WithAlpha(0.33f),
            BlockGameArcadeBlock.GhostYellow => Color.Yellow.WithAlpha(0.33f),
            BlockGameArcadeBlock.GhostGreen => Color.Lime.WithAlpha(0.33f),
            BlockGameArcadeBlock.GhostBlue => Color.Blue.WithAlpha(0.33f),
            BlockGameArcadeBlock.GhostPurple => Color.DarkOrchid.WithAlpha(0.33f),
            BlockGameArcadeBlock.GhostLightBlue => Color.Cyan.WithAlpha(0.33f),
            BlockGameArcadeBlock.Empty => Color.Transparent,
            _ => throw new NotImplementedException(),
        };
    }
}
