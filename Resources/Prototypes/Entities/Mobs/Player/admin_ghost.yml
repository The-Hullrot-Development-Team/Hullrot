- type: entity
  parent: [MobObserverBase, InventoryBase]
  id: AdminObserver
  name: admin observer
  categories: [ HideSpawnMenu ]
  components:
  - type: ContentEye
    maxZoom: 8.916104, 8.916104
  - type: Tag
    tags:
    - InstantDoAfters
    - CanPilot
    - BypassInteractionRangeChecks
    - BypassDropChecks
    - NoConsoleSound
  - type: Input
    context: "aghost"
  - type: Ghost
    canInteract: true
  - type: GhostHearing
  - type: Hands
  - type: ComplexInteraction
  - type: Puller
  - type: CombatMode
  - type: Physics
    ignorePaused: true
    bodyType: Kinematic
  - type: Body
    prototype: Aghost
  - type: Access
    groups:
    - AllAccess
    tags:
    - NuclearOperative
    - SyndicateAgent
    - CentralCommand
  - type: UserInterface
    interfaces:
      enum.SolarControlConsoleUiKey.Key:
        type: SolarControlConsoleBoundUserInterface
      enum.CommunicationsConsoleUiKey.Key:
        type: CommunicationsConsoleBoundUserInterface
      enum.RadarConsoleUiKey.Key:
        type: RadarConsoleBoundUserInterface
      enum.CargoConsoleUiKey.Orders:
        type: CargoOrderConsoleBoundUserInterface
      enum.CrewMonitoringUIKey.Key:
        type: CrewMonitoringBoundUserInterface
      enum.GeneralStationRecordConsoleKey.Key:
      # who the fuck named this bruh
        type: GeneralStationRecordConsoleBoundUserInterface
      enum.AtmosAlertsComputerUiKey.Key:
        type: AtmosAlertsComputerBoundUserInterface
      enum.StationMapUiKey.Key:
        type: StationMapBoundUserInterface
      enum.PowerMonitoringConsoleUiKey.Key:
        type: PowerMonitoringConsoleBoundUserInterface
      enum.WiresUiKey.Key:
        type: WiresBoundUserInterface
  - type: IntrinsicUI
    uis:
      enum.SolarControlConsoleUiKey.Key:
        toggleAction: ActionAGhostShowSolar
      enum.CommunicationsConsoleUiKey.Key:
        toggleAction: ActionAGhostShowCommunications
      enum.RadarConsoleUiKey.Key:
        toggleAction: ActionAGhostShowRadar
      enum.CargoConsoleUiKey.Orders:
        toggleAction: ActionAGhostShowCargo
      enum.CrewMonitoringUIKey.Key:
        toggleAction: ActionAGhostShowCrewMonitoring
      enum.GeneralStationRecordConsoleKey.Key:
        toggleAction: ActionAGhostShowStationRecords
      enum.AtmosAlertsComputerUiKey.Key:
        toggleAction: ActionAGhostShowAtmosAlerts
      enum.StationMapUiKey.Key:
        toggleAction: ActionAGhostShowStationMap
      enum.PowerMonitoringConsoleUiKey.Key:
        toggleAction: ActionAGhostShowPowerMonitor
  - type: SolarControlConsole # look ma i AM the computer!
  - type: CommunicationsConsole
    title: comms-console-announcement-title-centcom
    color: "#1d8bad"
    delay: 10
    initialDelay: 0
    global: true
  - type: RadarConsole
    followEntity: true
  - type: CargoOrderConsole
  - type: BankClient
  - type: CrewMonitoringConsole
  - type: GeneralStationRecordConsole
    canDeleteEntries: true
  - type: AtmosAlertsComputer
  - type: StationMap
  - type: PowerMonitoringConsole
  - type: PowerMonitoringCableNetworks
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: CrewMonitor
    transmitFrequencyId: ShuttleTimer
  - type: WirelessNetworkConnection
    range: 500
  - type: StationLimitedNetwork
  - type: Thieving
    stripTimeReduction: 9999
    stealthy: true
  - type: Stripping
  - type: SolutionScanner
  - type: IgnoreUIRange
  - type: ShowAntagIcons
  - type: Inventory
    templateId: aghost
  - type: Loadout
    prototypes: [ MobAghostGear ]
  - type: BypassInteractionChecks

- type: entity
  id: ActionAGhostShowSolar
  name: Solar Control Interface
  description: View a Solar Control Interface.
  components:
  - type: InstantAction
    icon: { sprite: Structures/Machines/parts.rsi, state: box_0 }
    iconOn: Structures/Machines/parts.rsi/box_2.png
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.SolarControlConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowCommunications
  name: Communications Interface
  description: View a Communications Interface.
  components:
  - type: InstantAction
    icon: { sprite: Interface/Actions/actions_ai.rsi, state: comms_console }
    iconOn: Interface/Actions/actions_ai.rsi/comms_console.png
    keywords: [ "AI", "console", "interface" ]
    priority: -4
    event: !type:ToggleIntrinsicUIEvent { key: enum.CommunicationsConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowRadar
  name: Mass Scanner Interface
  description: View a Mass Scanner Interface.
  components:
  - type: InstantAction
    icon: { sprite: Interface/Actions/actions_ai.rsi, state: mass_scanner }
    iconOn: Interface/Actions/actions_ai.rsi/mass_scanner.png
    keywords: [ "AI", "console", "interface" ]
    priority: -6
    event: !type:ToggleIntrinsicUIEvent { key: enum.RadarConsoleUiKey.Key }

- type: entity
  id: ActionAGhostShowCargo
  name: Cargo Ordering Interface
  description: View a Cargo Ordering Interface.
  components:
  - type: InstantAction
    icon: { sprite: Structures/Machines/parts.rsi, state: box_0 }
    iconOn: Structures/Machines/parts.rsi/box_2.png
    keywords: [ "AI", "console", "interface" ]
    priority: -10
    event: !type:ToggleIntrinsicUIEvent { key: enum.CargoConsoleUiKey.Orders }

- type: entity
  id: ActionAGhostShowCrewMonitoring
  name: Crew Monitoring Interface
  description: View a Crew Monitoring Interface.
  components:
  - type: InstantAction
    icon: { sprite: Interface/Actions/actions_ai.rsi, state: crew_monitor }
    iconOn: Interface/Actions/actions_ai.rsi/crew_monitor.png
    keywords: [ "AI", "console", "interface" ]
    priority: -8
    event: !type:ToggleIntrinsicUIEvent { key: enum.CrewMonitoringUIKey.Key }

- type: entity
  id: ActionAGhostShowStationRecords
  name: Station Records Interface
  description: View a Station Records Interface.
  components:
  - type: InstantAction
    icon: { sprite: Interface/Actions/actions_ai.rsi, state: station_records }
    iconOn: Interface/Actions/actions_ai.rsi/station_records.png
    keywords: [ "AI", "console", "interface" ]
    priority: -7
    event: !type:ToggleIntrinsicUIEvent { key: enum.GeneralStationRecordConsoleKey.Key }

- type: entity
  id: ActionAGhostShowAtmosAlerts
  name: Atmos Alerts Interface
  description: View a Atmos Alerts Interface.
  components:
  - type: InstantAction
    icon: { sprite: Structures/Wallmounts/air_monitors.rsi, state: alarm1 }
    iconOn: Structures/Wallmounts/air_monitors.rsi/alarm1.png
    keywords: [ "AI", "console", "interface" ]
    priority: -11
    event: !type:ToggleIntrinsicUIEvent { key: enum.AtmosAlertsComputerUiKey.Key }
    
- type: entity
  id: ActionAGhostShowStationMap
  name: Station Map Interface
  description: View a Station Map.
  components:
  - type: InstantAction
    icon: { sprite: Interface/Actions/pai-map.rsi, state: icon }
    iconOn: Interface/Actions/pai-map.rsi/icon.png
    keywords: [ "AI", "console", "interface" ]
    priority: -12
    event: !type:ToggleIntrinsicUIEvent { key: enum.StationMapUiKey.Key }

- type: entity
  id: ActionAGhostShowPowerMonitor
  name: Power Monitoring Interface
  description: View a Power Monitor Interface.
  components:
  - type: InstantAction
    icon: { sprite: Interface/Actions/actions_borg.rsi, state: wire-module }
    iconOn: Interface/Actions/actions_borg.rsi/wire-module.png
    keywords: [ "AI", "console", "interface" ]
    priority: -12
    event: !type:ToggleIntrinsicUIEvent { key: enum.PowerMonitoringConsoleUiKey.Key }